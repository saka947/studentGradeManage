<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saka947.demo.dao.GradeMapper">
  <resultMap id="BaseResultMap" type="com.saka947.demo.model.Grade">
    <id column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="subject_id" jdbcType="VARCHAR" property="subjectId" />
    <result column="subject_mark" jdbcType="DECIMAL" property="subjectMark" />
    <result column="exam_name" jdbcType="VARCHAR" property="examName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    grade_id, stu_id, subject_id, subject_mark, exam_name, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from grade
    where grade_id = #{gradeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from grade
    where grade_id = #{gradeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.saka947.demo.model.Grade">
    insert into grade (grade_id, stu_id, subject_id, 
      subject_mark, exam_name, create_time, 
      update_time)
    values (#{gradeId,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR}, #{subjectId,jdbcType=VARCHAR}, 
      #{subjectMark,jdbcType=DECIMAL}, #{examName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.saka947.demo.model.Grade">
    insert into grade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="subjectMark != null">
        subject_mark,
      </if>
      <if test="examName != null">
        exam_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="subjectMark != null">
        #{subjectMark,jdbcType=DECIMAL},
      </if>
      <if test="examName != null">
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.saka947.demo.model.Grade">
    update grade
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="subjectMark != null">
        subject_mark = #{subjectMark,jdbcType=DECIMAL},
      </if>
      <if test="examName != null">
        exam_name = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where grade_id = #{gradeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.saka947.demo.model.Grade">
    update grade
    set stu_id = #{stuId,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=VARCHAR},
      subject_mark = #{subjectMark,jdbcType=DECIMAL},
      exam_name = #{examName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where grade_id = #{gradeId,jdbcType=INTEGER}
  </update>
  <select id="getIfExist" resultMap="BaseResultMap" parameterType="com.saka947.demo.model.Grade">
    select <include refid="Base_Column_List" />
    from grade
    where exam_name = #{examName,jdbcType=VARCHAR}
    and stu_id = #{stuId,jdbcType=VARCHAR}
    and subject_id = #{subjectId,jdbcType=VARCHAR}
    limit 1
  </select>

  <select id="selectGrades" resultMap="BaseResultMap" parameterType="com.saka947.demo.model.Grade">
    select <include refid="Base_Column_List" />
    from grade
    where 1=1
    <if test="stuId != null">
     and stu_id = #{stuId,jdbcType=VARCHAR}
    </if>
    <if test="subjectId != null">
      and subject_id = #{subjectId,jdbcType=VARCHAR}
    </if>
    <if test="subjectMark != null">
      and subject_mark = #{subjectMark,jdbcType=DECIMAL}
    </if>
    <if test="examName != null">
      and exam_name = #{examName,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null">
      and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
      and update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
  </select>
</mapper>