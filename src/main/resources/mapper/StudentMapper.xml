<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saka947.demo.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.saka947.demo.model.Student">
    <id column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="stu_age" jdbcType="INTEGER" property="stuAge" />
    <result column="stu_depart_id" jdbcType="VARCHAR" property="stuDepartId" />
    <result column="stu_address" jdbcType="VARCHAR" property="stuAddress" />
    <result column="stu_class_id" jdbcType="VARCHAR" property="stuClassId" />
  </resultMap>
  <sql id="Base_Column_List">
    stu_id, stu_name, stu_age, stu_depart_id, stu_address, stu_class_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.saka947.demo.model.Student">
    insert into student (stu_id, stu_name, stu_age, 
      stu_depart_id, stu_address, stu_class_id
      )
    values (#{stuId,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, #{stuAge,jdbcType=INTEGER}, 
      #{stuDepartId,jdbcType=VARCHAR}, #{stuAddress,jdbcType=VARCHAR}, #{stuClassId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.saka947.demo.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="stuAge != null">
        stu_age,
      </if>
      <if test="stuDepartId != null">
        stu_depart_id,
      </if>
      <if test="stuAddress != null">
        stu_address,
      </if>
      <if test="stuClassId != null">
        stu_class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuAge != null">
        #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="stuDepartId != null">
        #{stuDepartId,jdbcType=VARCHAR},
      </if>
      <if test="stuAddress != null">
        #{stuAddress,jdbcType=VARCHAR},
      </if>
      <if test="stuClassId != null">
        #{stuClassId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.saka947.demo.model.Student">
    update student
    <set>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuAge != null">
        stu_age = #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="stuDepartId != null">
        stu_depart_id = #{stuDepartId,jdbcType=VARCHAR},
      </if>
      <if test="stuAddress != null">
        stu_address = #{stuAddress,jdbcType=VARCHAR},
      </if>
      <if test="stuClassId != null">
        stu_class_id = #{stuClassId,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.saka947.demo.model.Student">
    update student
    set stu_name = #{stuName,jdbcType=VARCHAR},
      stu_age = #{stuAge,jdbcType=INTEGER},
      stu_depart_id = #{stuDepartId,jdbcType=VARCHAR},
      stu_address = #{stuAddress,jdbcType=VARCHAR},
      stu_class_id = #{stuClassId,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </update>
</mapper>